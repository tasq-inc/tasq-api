Resources:

    RestApi:
      Type: AWS::ApiGateway::RestApi
      Properties:
        Name: Api
  
  
  
    RestApiAuthorizer:
      Type: AWS::ApiGateway::Authorizer
      Properties:
        AuthorizerCredentials:
          Fn::GetAtt:
          - RestApiAuthorizerRole
          - Arn
        AuthorizerResultTtlInSeconds: 300
        
        AuthorizerUri: 
          Fn::Join:
          - ''
          - - 'arn:aws:apigateway:'
            - Ref: AWS::Region
            - ":lambda:path/2015-03-31/functions/"
            - "${{file(./src/resources/config.yml):LambdaAuthArn}}"
            - "/invocations"
        IdentitySource: method.request.header.Authorization
        Name: api-authorizer
        RestApiId:
          Ref: RestApi
        Type: TOKEN
  
    Lambda:
      Type: AWS::Lambda::Function
      Properties:
        Code:
          ZipFile: |
            import json
  
            def lambda_handler(event, context):
                # TODO implement
                return {
                    'statusCode': 200,
                    'body': json.dumps('Hello from Lambda!!!!!!!!!!!!'),
                    'event': event
                }
        Handler: index.handler
        MemorySize: 128
        Role:
          Fn::GetAtt:
          - AuthLambdaRole
          - Arn
        Runtime: python3.7
        Timeout: 60
  
  
  
    LambdaPermission:
      Type: AWS::Lambda::Permission
      Properties:
        Action: lambda:invokeFunction
        FunctionName:
          Fn::GetAtt:
          - Lambda
          - Arn
        Principal: apigateway.amazonaws.com
        SourceArn:
          Fn::Join:
          - ''
          - - 'arn:aws:execute-api:'
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: RestApi
            - "/*"
  
  
    Model:
      Type: AWS::ApiGateway::Model
      Properties:
        ContentType: application/json
        Name: user
        RestApiId:
          Ref: RestApi
        Schema:
          "$schema": http://json-schema.org/draft-04/schema#
          title: user
          type: object
          additionalProperties: false
          properties:
            id:
              type: string
            name:
              type: string
          required:
          - id
          - name
  
  
  
    StageV1Deployment:
      Type: AWS::ApiGateway::Deployment
      Properties:
        RestApiId:
          Ref: RestApi
  
  
  
    StageV1:
      Type: AWS::ApiGateway::Stage
      DependsOn: StageV1Deployment
      Properties:
        StageName: v2
        Description: 'API Version 2'
        DeploymentId:
          Ref: StageV1Deployment
        RestApiId:
          Ref: RestApi
        # AutoDeploy: true
  
    ApiCustomDomainMapping:
      Type: AWS::ApiGateway::BasePathMapping
      Properties: 
        BasePath: v2
        DomainName: "api.tasqinc.com"
        RestApiId:
          Ref: RestApi
        Stage: 
          Ref: StageV1
  
  
  
  ############# RESOURCE - profile ############
  
  
    ProfileResource:
      Type: AWS::ApiGateway::Resource
      Properties:
        RestApiId:
          Ref: RestApi
        ParentId:
          Fn::GetAtt:
          - RestApi
          - RootResourceId
        PathPart: users
  
  
  
    GetProfile:
      Type: AWS::ApiGateway::Method
      DependsOn: LambdaPermission
      Properties:
        AuthorizationType: CUSTOM
        AuthorizerId:
          Ref: RestApiAuthorizer
        RestApiId:
          Ref: RestApi
        ResourceId:
          Ref: ProfileResource
        HttpMethod: GET
        Integration:
          Type: AWS
          IntegrationHttpMethod: POST
          Uri:
            Fn::Join:
            - ''
            - - 'arn:aws:apigateway:'
              - Ref: AWS::Region
              - ":lambda:path/2015-03-31/functions/"
              - Fn::GetAtt:
                - Lambda
                - Arn
              - "/invocations"
          IntegrationResponses:
          - StatusCode: 204
          RequestTemplates:
            application/json: '{"action": "get", "body": $input.json(''$'')}'
        RequestModels:
          application/json:
            Ref: Model
        RequestParameters:
          method.request.header.Authorization: true
        MethodResponses:
        - ResponseModels:
            application/json: Empty
          StatusCode: 204
  
    PostProfile:
      Type: AWS::ApiGateway::Method
      DependsOn: LambdaPermission
      Properties:
        AuthorizationType: CUSTOM
        AuthorizerId:
          Ref: RestApiAuthorizer
        RestApiId:
          Ref: RestApi
        ResourceId:
          Ref: ProfileResource
        HttpMethod: POST
        Integration:
          Type: AWS
          IntegrationHttpMethod: POST
          Uri:
            Fn::Join:
            - ''
            - - 'arn:aws:apigateway:'
              - Ref: AWS::Region
              - ":lambda:path/2015-03-31/functions/"
              - Fn::GetAtt:
                - Lambda
                - Arn
              - "/invocations"
          IntegrationResponses:
          - StatusCode: 204
          RequestTemplates:
            application/json: '{"action": "post", "body": $input.json(''$'')}'
        RequestModels:
          application/json:
            Ref: Model
        RequestParameters:
          method.request.header.Authorization: true
        MethodResponses:
        - ResponseModels:
            application/json: Empty
          StatusCode: 204
  
  
  
    ProfileUserResource:
      Type: AWS::ApiGateway::Resource
      Properties:
        RestApiId:
          Ref: RestApi
        ParentId:
          Ref: ProfileResource
        PathPart: "{user}"
  
  
    GetProfileUser:
      Type: AWS::ApiGateway::Method
      DependsOn: LambdaPermission
      Properties:
        AuthorizationType: CUSTOM
        AuthorizerId:
          Ref: RestApiAuthorizer
        RestApiId:
          Ref: RestApi
        ResourceId:
          Ref: ProfileUserResource
        HttpMethod: GET
        Integration:
          Type: AWS
          IntegrationHttpMethod: POST
          Uri:
            Fn::Join:
            - ''
            - - 'arn:aws:apigateway:'
              - Ref: AWS::Region
              - ":lambda:path/2015-03-31/functions/"
              - Fn::GetAtt:
                - Lambda
                - Arn
              - "/invocations"
          IntegrationResponses:
          - StatusCode: 204
          RequestTemplates:
            application/json: '{"action": "get", "body": $input.json(''$'')}'
        RequestModels:
          application/json:
            Ref: Model
        RequestParameters:
          method.request.header.Authorization: true
        MethodResponses:
        - ResponseModels:
            application/json: Empty
          StatusCode: 204
  
    PutProfileUser:
      Type: AWS::ApiGateway::Method
      DependsOn: LambdaPermission
      Properties:
        AuthorizationType: CUSTOM
        AuthorizerId:
          Ref: RestApiAuthorizer
        RestApiId:
          Ref: RestApi
        ResourceId:
          Ref: ProfileUserResource
        HttpMethod: PUT
        Integration:
          Type: AWS
          IntegrationHttpMethod: POST
          Uri:
            Fn::Join:
            - ''
            - - 'arn:aws:apigateway:'
              - Ref: AWS::Region
              - ":lambda:path/2015-03-31/functions/"
              - Fn::GetAtt:
                - Lambda
                - Arn
              - "/invocations"
          IntegrationResponses:
          - StatusCode: 204
          RequestTemplates:
            application/json: '{"action": "put", "body": $input.json(''$'')}'
        RequestModels:
          application/json:
            Ref: Model
        RequestParameters:
          method.request.header.Authorization: true
        MethodResponses:
        - ResponseModels:
            application/json: Empty
          StatusCode: 204
  
  
  
  
          ############# RESOURCE - responses ############
  
    ResponsesResource:
      Type: AWS::ApiGateway::Resource
      Properties:
        RestApiId:
          Ref: RestApi
        ParentId:
          Fn::GetAtt:
          - RestApi
          - RootResourceId
        PathPart: responses
  
  
  
    PostResponse:
      Type: AWS::ApiGateway::Method
      DependsOn: LambdaPermission
      Properties:
        AuthorizationType: CUSTOM
        AuthorizerId:
          Ref: RestApiAuthorizer
        RestApiId:
          Ref: RestApi
        ResourceId:
          Ref: ResponsesResource
        HttpMethod: POST
        Integration:
          Type: AWS
          IntegrationHttpMethod: POST
          Uri:
            Fn::Join:
            - ''
            - - 'arn:aws:apigateway:'
              - Ref: AWS::Region
              - ":lambda:path/2015-03-31/functions/"
              - Fn::GetAtt:
                - Lambda
                - Arn
              - "/invocations"
          IntegrationResponses:
          - StatusCode: 204
          RequestTemplates:
            application/json: '{"action": "post", "body": $input.json(''$'')}'
        RequestModels:
          application/json:
            Ref: Model
        RequestParameters:
          method.request.header.Authorization: true
        MethodResponses:
        - ResponseModels:
            application/json: Empty
          StatusCode: 204
  
  
  
    GetResponse:
      Type: AWS::ApiGateway::Method
      DependsOn: LambdaPermission
      Properties:
        AuthorizationType: CUSTOM
        AuthorizerId:
          Ref: RestApiAuthorizer
        RestApiId:
          Ref: RestApi
        ResourceId:
          Ref: ResponsesResource
        HttpMethod: GET
        Integration:
          Type: AWS
          IntegrationHttpMethod: POST
          Uri:
            Fn::Join:
            - ''
            - - 'arn:aws:apigateway:'
              - Ref: AWS::Region
              - ":lambda:path/2015-03-31/functions/"
              - Fn::GetAtt:
                - Lambda
                - Arn
              - "/invocations"
          IntegrationResponses:
          - StatusCode: 204
          RequestTemplates:
            application/json: '{"action": "get", "body": $input.json(''$'')}'
        RequestModels:
          application/json:
            Ref: Model
        RequestParameters:
          method.request.header.Authorization: true
        MethodResponses:
        - ResponseModels:
            application/json: Empty
          StatusCode: 204
  
  
  
  
  
    ResponsesUserResource:
      Type: AWS::ApiGateway::Resource
      Properties:
        RestApiId:
          Ref: RestApi
        ParentId:
          Ref: ResponsesResource
        PathPart: "{response_id}"
  
  
    PutResponseUserPrediction:
      Type: AWS::ApiGateway::Method
      DependsOn: LambdaPermission
      Properties:
        AuthorizationType: CUSTOM
        AuthorizerId:
          Ref: RestApiAuthorizer
        RestApiId:
          Ref: RestApi
        ResourceId:
          Ref: ResponsesUserResource
        HttpMethod: PUT
        Integration:
          Type: AWS
          IntegrationHttpMethod: POST
          Uri:
            Fn::Join:
            - ''
            - - 'arn:aws:apigateway:'
              - Ref: AWS::Region
              - ":lambda:path/2015-03-31/functions/"
              - Fn::GetAtt:
                - Lambda
                - Arn
              - "/invocations"
          IntegrationResponses:
          - StatusCode: 204
          RequestTemplates:
            application/json: '{"action": "put", "body": $input.json(''$'')}'
        RequestModels:
          application/json:
            Ref: Model
        RequestParameters:
          method.request.header.Authorization: true
        MethodResponses:
        - ResponseModels:
            application/json: Empty
          StatusCode: 204
  
    DeleteResponseUserPrediction:
      Type: AWS::ApiGateway::Method
      DependsOn: LambdaPermission
      Properties:
        AuthorizationType: CUSTOM
        AuthorizerId:
          Ref: RestApiAuthorizer
        RestApiId:
          Ref: RestApi
        ResourceId:
          Ref: ResponsesUserResource
        HttpMethod: DELETE
        Integration:
          Type: AWS
          IntegrationHttpMethod: POST
          Uri:
            Fn::Join:
            - ''
            - - 'arn:aws:apigateway:'
              - Ref: AWS::Region
              - ":lambda:path/2015-03-31/functions/"
              - Fn::GetAtt:
                - Lambda
                - Arn
              - "/invocations"
          IntegrationResponses:
          - StatusCode: 204
          RequestTemplates:
            application/json: '{"action": "delete", "body": $input.json(''$'')}'
        RequestModels:
          application/json:
            Ref: Model
        RequestParameters:
          method.request.header.Authorization: true
        MethodResponses:
        - ResponseModels:
            application/json: Empty
          StatusCode: 204
  
    GetResponseUserPrediction:
      Type: AWS::ApiGateway::Method
      DependsOn: LambdaPermission
      Properties:
        AuthorizationType: CUSTOM
        AuthorizerId:
          Ref: RestApiAuthorizer
        RestApiId:
          Ref: RestApi
        ResourceId:
          Ref: ResponsesUserResource
        HttpMethod: GET
        Integration:
          Type: AWS
          IntegrationHttpMethod: POST
          Uri:
            Fn::Join:
            - ''
            - - 'arn:aws:apigateway:'
              - Ref: AWS::Region
              - ":lambda:path/2015-03-31/functions/"
              - Fn::GetAtt:
                - Lambda
                - Arn
              - "/invocations"
          IntegrationResponses:
          - StatusCode: 204
          RequestTemplates:
            application/json: '{"action": "get", "body": $input.json(''$'')}'
        RequestModels:
          application/json:
            Ref: Model
        RequestParameters:
          method.request.header.Authorization: true
        MethodResponses:
        - ResponseModels:
            application/json: Empty
          StatusCode: 204
    
  
  
  
    ############# RESOURCE - tasqs ############
  
  
    TasqsResource:
      Type: AWS::ApiGateway::Resource
      Properties:
        RestApiId:
          Ref: RestApi
        ParentId:
          Fn::GetAtt:
          - RestApi
          - RootResourceId
        PathPart: tasqs
  
  
    GetTasqs:
      Type: AWS::ApiGateway::Method
      DependsOn: LambdaPermission
      Properties:
        AuthorizationType: CUSTOM
        AuthorizerId:
          Ref: RestApiAuthorizer
        RestApiId:
          Ref: RestApi
        ResourceId:
          Ref: TasqsResource
        HttpMethod: GET
        Integration:
          Type: AWS
          IntegrationHttpMethod: POST
          Uri:
            Fn::Join:
            - ''
            - - 'arn:aws:apigateway:'
              - Ref: AWS::Region
              - ":lambda:path/2015-03-31/functions/"
              - Fn::GetAtt:
                - Lambda
                - Arn
              - "/invocations"
          IntegrationResponses:
          - StatusCode: 204
          RequestTemplates:
            application/json: '{"action": "get", "body": $input.json(''$'')}'
        RequestModels:
          application/json:
            Ref: Model
        RequestParameters:
          method.request.header.Authorization: true
        MethodResponses:
        - ResponseModels:
            application/json: Empty
          StatusCode: 204
  
    PostTasqs:
      Type: AWS::ApiGateway::Method
      DependsOn: LambdaPermission
      Properties:
        AuthorizationType: CUSTOM
        AuthorizerId:
          Ref: RestApiAuthorizer
        RestApiId:
          Ref: RestApi
        ResourceId:
          Ref: TasqsResource
        HttpMethod: POST
        Integration:
          Type: AWS
          IntegrationHttpMethod: POST
          Uri:
            Fn::Join:
            - ''
            - - 'arn:aws:apigateway:'
              - Ref: AWS::Region
              - ":lambda:path/2015-03-31/functions/"
              - Fn::GetAtt:
                - Lambda
                - Arn
              - "/invocations"
          IntegrationResponses:
          - StatusCode: 204
          RequestTemplates:
            application/json: '{"action": "post", "body": $input.json(''$'')}'
        RequestModels:
          application/json:
            Ref: Model
        RequestParameters:
          method.request.header.Authorization: true
        MethodResponses:
        - ResponseModels:
            application/json: Empty
          StatusCode: 204
        
  
  
  
    TasqsTasqResource:
      Type: AWS::ApiGateway::Resource
      Properties:
        RestApiId:
          Ref: RestApi
        ParentId:
          Ref: TasqsResource
        PathPart: "{tasq_id}"
  
        
    DeleteTasqTasqPrediction:
      Type: AWS::ApiGateway::Method
      DependsOn: LambdaPermission
      Properties:
        AuthorizationType: CUSTOM
        AuthorizerId:
          Ref: RestApiAuthorizer
        RestApiId:
          Ref: RestApi
        ResourceId:
          Ref: TasqsTasqResource
        HttpMethod: DELETE
        Integration:
          Type: AWS
          IntegrationHttpMethod: POST
          Uri:
            Fn::Join:
            - ''
            - - 'arn:aws:apigateway:'
              - Ref: AWS::Region
              - ":lambda:path/2015-03-31/functions/"
              - Fn::GetAtt:
                - Lambda
                - Arn
              - "/invocations"
          IntegrationResponses:
          - StatusCode: 204
          RequestTemplates:
            application/json: '{"action": "delete", "body": $input.json(''$'')}'
        RequestModels:
          application/json:
            Ref: Model
        RequestParameters:
          method.request.header.Authorization: true
        MethodResponses:
        - ResponseModels:
            application/json: Empty
          StatusCode: 204
  
  
    GetTasqTasqPrediction:
      Type: AWS::ApiGateway::Method
      DependsOn: LambdaPermission
      Properties:
        AuthorizationType: CUSTOM
        AuthorizerId:
          Ref: RestApiAuthorizer
        RestApiId:
          Ref: RestApi
        ResourceId:
          Ref: TasqsTasqResource
        HttpMethod: GET
        Integration:
          Type: AWS
          IntegrationHttpMethod: POST
          Uri:
            Fn::Join:
            - ''
            - - 'arn:aws:apigateway:'
              - Ref: AWS::Region
              - ":lambda:path/2015-03-31/functions/"
              - Fn::GetAtt:
                - Lambda
                - Arn
              - "/invocations"
          IntegrationResponses:
          - StatusCode: 204
          RequestTemplates:
            application/json: '{"action": "delete", "body": $input.json(''$'')}'
        RequestModels:
          application/json:
            Ref: Model
        RequestParameters:
          method.request.header.Authorization: true
        MethodResponses:
        - ResponseModels:
            application/json: Empty
          StatusCode: 204
  
    PutTasqTasqPrediction:
      Type: AWS::ApiGateway::Method
      DependsOn: LambdaPermission
      Properties:
        AuthorizationType: CUSTOM
        AuthorizerId:
          Ref: RestApiAuthorizer
        RestApiId:
          Ref: RestApi
        ResourceId:
          Ref: TasqsTasqResource
        HttpMethod: PUT
        Integration:
          Type: AWS
          IntegrationHttpMethod: POST
          Uri:
            Fn::Join:
            - ''
            - - 'arn:aws:apigateway:'
              - Ref: AWS::Region
              - ":lambda:path/2015-03-31/functions/"
              - Fn::GetAtt:
                - Lambda
                - Arn
              - "/invocations"
          IntegrationResponses:
          - StatusCode: 204
          RequestTemplates:
            application/json: '{"action": "put", "body": $input.json(''$'')}'
        RequestModels:
          application/json:
            Ref: Model
        RequestParameters:
          method.request.header.Authorization: true
        MethodResponses:
        - ResponseModels:
            application/json: Empty
          StatusCode: 204
  
  
          ############# RESOURCE - tickets ############
  
  
  
    TicketResource:
      Type: AWS::ApiGateway::Resource
      Properties:
        RestApiId:
          Ref: RestApi
        ParentId:
          Fn::GetAtt:
          - RestApi
          - RootResourceId
        PathPart: tickets
  
  
  
    PostTickets:
      Type: AWS::ApiGateway::Method
      DependsOn: LambdaPermission
      Properties:
        AuthorizationType: CUSTOM
        AuthorizerId:
          Ref: RestApiAuthorizer
        RestApiId:
          Ref: RestApi
        ResourceId:
          Ref: TicketResource
        HttpMethod: POST
        Integration:
          Type: AWS
          IntegrationHttpMethod: POST
          Uri:
            Fn::Join:
            - ''
            - - 'arn:aws:apigateway:'
              - Ref: AWS::Region
              - ":lambda:path/2015-03-31/functions/"
              - Fn::GetAtt:
                - Lambda
                - Arn
              - "/invocations"
          IntegrationResponses:
          - StatusCode: 204
          RequestTemplates:
            application/json: '{"action": "put", "body": $input.json(''$'')}'
        RequestModels:
          application/json:
            Ref: Model
        RequestParameters:
          method.request.header.Authorization: true
        MethodResponses:
        - ResponseModels:
            application/json: Empty
          StatusCode: 204
  
  
  
    GetTickets:
      Type: AWS::ApiGateway::Method
      DependsOn: LambdaPermission
      Properties:
        AuthorizationType: CUSTOM
        AuthorizerId:
          Ref: RestApiAuthorizer
        RestApiId:
          Ref: RestApi
        ResourceId:
          Ref: TicketResource
        HttpMethod: GET
        Integration:
          Type: AWS
          IntegrationHttpMethod: POST
          Uri:
            Fn::Join:
            - ''
            - - 'arn:aws:apigateway:'
              - Ref: AWS::Region
              - ":lambda:path/2015-03-31/functions/"
              - Fn::GetAtt:
                - Lambda
                - Arn
              - "/invocations"
          IntegrationResponses:
          - StatusCode: 204
          RequestTemplates:
            application/json: '{"action": "get", "body": $input.json(''$'')}'
        RequestModels:
          application/json:
            Ref: Model
        RequestParameters:
          method.request.header.Authorization: true
        MethodResponses:
        - ResponseModels:
            application/json: Empty
          StatusCode: 204
  
  
  
  
  
  
    TicketIDResource:
      Type: AWS::ApiGateway::Resource
      Properties:
        RestApiId:
          Ref: RestApi
        ParentId:
          Ref: TicketResource
        PathPart: "{ticket_id}"
  
    PutTicket:
      Type: AWS::ApiGateway::Method
      DependsOn: LambdaPermission
      Properties:
        AuthorizationType: CUSTOM
        AuthorizerId:
          Ref: RestApiAuthorizer
        RestApiId:
          Ref: RestApi
        ResourceId:
          Ref: TicketIDResource
        HttpMethod: PUT
        Integration:
          Type: AWS
          IntegrationHttpMethod: POST
          Uri:
            Fn::Join:
            - ''
            - - 'arn:aws:apigateway:'
              - Ref: AWS::Region
              - ":lambda:path/2015-03-31/functions/"
              - Fn::GetAtt:
                - Lambda
                - Arn
              - "/invocations"
          IntegrationResponses:
          - StatusCode: 204
          RequestTemplates:
            application/json: '{"action": "put", "body": $input.json(''$'')}'
        RequestModels:
          application/json:
            Ref: Model
        RequestParameters:
          method.request.header.Authorization: true
        MethodResponses:
        - ResponseModels:
            application/json: Empty
          StatusCode: 204
  
  
    DeleteTicket:
      Type: AWS::ApiGateway::Method
      DependsOn: LambdaPermission
      Properties:
        AuthorizationType: CUSTOM
        AuthorizerId:
          Ref: RestApiAuthorizer
        RestApiId:
          Ref: RestApi
        ResourceId:
          Ref: TicketIDResource
        HttpMethod: DELETE
        Integration:
          Type: AWS
          IntegrationHttpMethod: POST
          Uri:
            Fn::Join:
            - ''
            - - 'arn:aws:apigateway:'
              - Ref: AWS::Region
              - ":lambda:path/2015-03-31/functions/"
              - Fn::GetAtt:
                - Lambda
                - Arn
              - "/invocations"
          IntegrationResponses:
          - StatusCode: 204
          RequestTemplates:
            application/json: '{"action": "delete", "body": $input.json(''$'')}'
        RequestModels:
          application/json:
            Ref: Model
        RequestParameters:
          method.request.header.Authorization: true
        MethodResponses:
        - ResponseModels:
            application/json: Empty
          StatusCode: 204
  
  
    GetTicket:
      Type: AWS::ApiGateway::Method
      DependsOn: LambdaPermission
      Properties:
        AuthorizationType: CUSTOM
        AuthorizerId:
          Ref: RestApiAuthorizer
        RestApiId:
          Ref: RestApi
        ResourceId:
          Ref: TicketIDResource
        HttpMethod: GET
        Integration:
          Type: AWS
          IntegrationHttpMethod: POST
          Uri:
            Fn::Join:
            - ''
            - - 'arn:aws:apigateway:'
              - Ref: AWS::Region
              - ":lambda:path/2015-03-31/functions/"
              - Fn::GetAtt:
                - Lambda
                - Arn
              - "/invocations"
          IntegrationResponses:
          - StatusCode: 204
          RequestTemplates:
            application/json: '{"action": "get", "body": $input.json(''$'')}'
        RequestModels:
          application/json:
            Ref: Model
        RequestParameters:
          method.request.header.Authorization: true
        MethodResponses:
        - ResponseModels:
            application/json: Empty
          StatusCode: 204
  
  
        
  
  
          ############# RESOURCE - workflow ############
  
    WorkflowResource:
      Type: AWS::ApiGateway::Resource
      Properties:
        RestApiId:
          Ref: RestApi
        ParentId:
          Fn::GetAtt:
          - RestApi
          - RootResourceId
        PathPart: workflows
  
  
  
    PostWorkflow:
      Type: AWS::ApiGateway::Method
      DependsOn: LambdaPermission
      Properties:
        AuthorizationType: CUSTOM
        AuthorizerId:
          Ref: RestApiAuthorizer
        RestApiId:
          Ref: RestApi
        ResourceId:
          Ref: WorkflowResource
        HttpMethod: POST
        Integration:
          Type: AWS
          IntegrationHttpMethod: POST
          Uri:
            Fn::Join:
            - ''
            - - 'arn:aws:apigateway:'
              - Ref: AWS::Region
              - ":lambda:path/2015-03-31/functions/"
              - Fn::GetAtt:
                - Lambda
                - Arn
              - "/invocations"
          IntegrationResponses:
          - StatusCode: 204
          RequestTemplates:
            application/json: '{"action": "put", "body": $input.json(''$'')}'
        RequestModels:
          application/json:
            Ref: Model
        RequestParameters:
          method.request.header.Authorization: true
        MethodResponses:
        - ResponseModels:
            application/json: Empty
          StatusCode: 204
  
  
  
    GetWorkflow:
      Type: AWS::ApiGateway::Method
      DependsOn: LambdaPermission
      Properties:
        AuthorizationType: CUSTOM
        AuthorizerId:
          Ref: RestApiAuthorizer
        RestApiId:
          Ref: RestApi
        ResourceId:
          Ref: WorkflowResource
        HttpMethod: GET
        Integration:
          Type: AWS
          IntegrationHttpMethod: POST
          Uri:
            Fn::Join:
            - ''
            - - 'arn:aws:apigateway:'
              - Ref: AWS::Region
              - ":lambda:path/2015-03-31/functions/"
              - Fn::GetAtt:
                - Lambda
                - Arn
              - "/invocations"
          IntegrationResponses:
          - StatusCode: 204
          RequestTemplates:
            application/json: '{"action": "put", "body": $input.json(''$'')}'
        RequestModels:
          application/json:
            Ref: Model
        RequestParameters:
          method.request.header.Authorization: true
        MethodResponses:
        - ResponseModels:
            application/json: Empty
          StatusCode: 204
  
  
  
  
  
  
    WorkflowUserResource:
      Type: AWS::ApiGateway::Resource
      Properties:
        RestApiId:
          Ref: RestApi
        ParentId:
          Ref: WorkflowResource
        PathPart: "{workflow_id}"
  
    PutWorkflow:
      Type: AWS::ApiGateway::Method
      DependsOn: LambdaPermission
      Properties:
        AuthorizationType: CUSTOM
        AuthorizerId:
          Ref: RestApiAuthorizer
        RestApiId:
          Ref: RestApi
        ResourceId:
          Ref: WorkflowUserResource
        HttpMethod: PUT
        Integration:
          Type: AWS
          IntegrationHttpMethod: POST
          Uri:
            Fn::Join:
            - ''
            - - 'arn:aws:apigateway:'
              - Ref: AWS::Region
              - ":lambda:path/2015-03-31/functions/"
              - Fn::GetAtt:
                - Lambda
                - Arn
              - "/invocations"
          IntegrationResponses:
          - StatusCode: 204
          RequestTemplates:
            application/json: '{"action": "put", "body": $input.json(''$'')}'
        RequestModels:
          application/json:
            Ref: Model
        RequestParameters:
          method.request.header.Authorization: true
        MethodResponses:
        - ResponseModels:
            application/json: Empty
          StatusCode: 204
  
  
    DeleteWorkflowPrediction:
      Type: AWS::ApiGateway::Method
      DependsOn: LambdaPermission
      Properties:
        AuthorizationType: CUSTOM
        AuthorizerId:
          Ref: RestApiAuthorizer
        RestApiId:
          Ref: RestApi
        ResourceId:
          Ref: WorkflowUserResource
        HttpMethod: DELETE
        Integration:
          Type: AWS
          IntegrationHttpMethod: POST
          Uri:
            Fn::Join:
            - ''
            - - 'arn:aws:apigateway:'
              - Ref: AWS::Region
              - ":lambda:path/2015-03-31/functions/"
              - Fn::GetAtt:
                - Lambda
                - Arn
              - "/invocations"
          IntegrationResponses:
          - StatusCode: 204
          RequestTemplates:
            application/json: '{"action": "delete", "body": $input.json(''$'')}'
        RequestModels:
          application/json:
            Ref: Model
        RequestParameters:
          method.request.header.Authorization: true
        MethodResponses:
        - ResponseModels:
            application/json: Empty
          StatusCode: 204
  
  
    GetWorkflowPrediction:
      Type: AWS::ApiGateway::Method
      DependsOn: LambdaPermission
      Properties:
        AuthorizationType: CUSTOM
        AuthorizerId:
          Ref: RestApiAuthorizer
        RestApiId:
          Ref: RestApi
        ResourceId:
          Ref: WorkflowUserResource
        HttpMethod: GET
        Integration:
          Type: AWS
          IntegrationHttpMethod: POST
          Uri:
            Fn::Join:
            - ''
            - - 'arn:aws:apigateway:'
              - Ref: AWS::Region
              - ":lambda:path/2015-03-31/functions/"
              - Fn::GetAtt:
                - Lambda
                - Arn
              - "/invocations"
          IntegrationResponses:
          - StatusCode: 204
          RequestTemplates:
            application/json: '{"action": "get", "body": $input.json(''$'')}'
        RequestModels:
          application/json:
            Ref: Model
        RequestParameters:
          method.request.header.Authorization: true
        MethodResponses:
        - ResponseModels:
            application/json: Empty
          StatusCode: 204
  
  
  